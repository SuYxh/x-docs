import{o as n,c as s,e as a}from"./app.8b525408.js";const t='{"title":"Egg实现上传文件到阿里云OSS","description":"","frontmatter":{},"headers":[{"level":2,"title":"用到的包","slug":"用到的包"},{"level":2,"title":"File模式","slug":"file模式"},{"level":3,"title":"Egg配置","slug":"egg配置"},{"level":3,"title":"代码","slug":"代码"},{"level":2,"title":"Stream 模式","slug":"stream-模式"},{"level":3,"title":"Egg配置","slug":"egg配置-1"},{"level":3,"title":"代码","slug":"代码-1"},{"level":2,"title":"踩坑(报错记录)","slug":"踩坑-报错记录"},{"level":2,"title":"参考","slug":"参考"}],"relativePath":"node/egg/Egg实现文件上传.md","lastUpdated":1658753104216}',p={},o=[a('<h1 id="egg实现上传文件到阿里云oss">Egg实现上传文件到阿里云OSS</h1><h2 id="用到的包">用到的包</h2><ul><li><p><code>egg-multipart</code>【egg中默认使用】</p></li><li><p><code>ali-oss</code></p></li><li><p><code>crypto</code></p></li><li><p><code>path</code></p></li></ul><h2 id="file模式">File模式</h2><h3 id="egg配置">Egg配置</h3><div class="language-js"><pre><code> exports<span class="token punctuation">.</span>multipart <span class="token operator">=</span> <span class="token punctuation">{</span>\n    mode<span class="token operator">:</span> <span class="token string">&#39;file&#39;</span><span class="token punctuation">,</span>\n    allowArrayField<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n    fileSize<span class="token operator">:</span> <span class="token string">&#39;5mb&#39;</span><span class="token punctuation">,</span>\n   \t<span class="token comment">// 如果报错 Invalid filename ，egg-multipart有对上传文件的后缀名限制的白名单(whitelist)，.md后缀没有在默认whitelist中，导致上传失败。</span>\n    fileExtensions<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;.md&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span>\n</code></pre></div><h3 id="代码">代码</h3><div class="language-js"><pre><code><span class="token string">&#39;use strict&#39;</span>\n\n<span class="token keyword">const</span> Controller <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;egg&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>Controller\n<span class="token keyword">const</span> path <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;path&#39;</span><span class="token punctuation">)</span>\n<span class="token keyword">const</span> <span class="token constant">OSS</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;ali-oss&#39;</span><span class="token punctuation">)</span>\n<span class="token keyword">const</span> fs <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;mz/fs&#39;</span><span class="token punctuation">)</span>\n<span class="token keyword">const</span> crypto <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;crypto&#39;</span><span class="token punctuation">)</span>\n\n<span class="token keyword">class</span> <span class="token class-name">UploadController</span> <span class="token keyword">extends</span> <span class="token class-name">Controller</span> <span class="token punctuation">{</span>\n  <span class="token comment">// file 模式</span>\n  <span class="token keyword">async</span> <span class="token function">upload</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> <span class="token punctuation">{</span> ctx <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">this</span>\n    <span class="token keyword">const</span> file <span class="token operator">=</span> ctx<span class="token punctuation">.</span>request<span class="token punctuation">.</span>files<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>\n\t\t\n    <span class="token comment">// 请查看阿里云OSS使用文档</span>\n    <span class="token keyword">const</span> client <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">OSS</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n      region<span class="token operator">:</span> <span class="token string">&#39;oss-cn-beijing&#39;</span><span class="token punctuation">,</span>\n      bucket<span class="token operator">:</span> <span class="token string">&#39;yxh-test-bucket&#39;</span><span class="token punctuation">,</span>\n      accessKeyId<span class="token operator">:</span> <span class="token string">&#39;----&#39;</span><span class="token punctuation">,</span>\n      accessKeySecret<span class="token operator">:</span> <span class="token string">&#39;----&#39;</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n\n    <span class="token comment">// 获取后缀</span>\n    <span class="token keyword">const</span> extname <span class="token operator">=</span> path<span class="token punctuation">.</span><span class="token function">extname</span><span class="token punctuation">(</span>file<span class="token punctuation">.</span>filename<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toLocaleLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n    <span class="token comment">// 获取源文件的文件名（不包含后缀名）</span>\n    <span class="token keyword">const</span> originFileName <span class="token operator">=</span> path<span class="token punctuation">.</span><span class="token function">basename</span><span class="token punctuation">(</span>file<span class="token punctuation">.</span>filename<span class="token punctuation">,</span> extname<span class="token punctuation">)</span>\n\n    <span class="token comment">// 生成唯一的文件名</span>\n    <span class="token keyword">const</span> md5 <span class="token operator">=</span> crypto<span class="token punctuation">.</span><span class="token function">createHash</span><span class="token punctuation">(</span><span class="token string">&#39;md5&#39;</span><span class="token punctuation">)</span>\n    <span class="token keyword">const</span> timestamp <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// 当前时间戳</span>\n    <span class="token keyword">const</span> randomNum <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">ceil</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">1000</span><span class="token punctuation">)</span> <span class="token comment">// 取1000以下的随机数</span>\n    <span class="token keyword">const</span> filename <span class="token operator">=</span>\n      md5\n        <span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span>path<span class="token punctuation">.</span><span class="token function">basename</span><span class="token punctuation">(</span>file<span class="token punctuation">.</span>filename<span class="token punctuation">,</span> extname<span class="token punctuation">)</span> <span class="token operator">+</span> timestamp <span class="token operator">+</span> randomNum<span class="token punctuation">)</span>\n        <span class="token punctuation">.</span><span class="token function">digest</span><span class="token punctuation">(</span><span class="token string">&#39;hex&#39;</span><span class="token punctuation">)</span> <span class="token operator">+</span> extname\n\n    <span class="token keyword">try</span> <span class="token punctuation">{</span>\n      <span class="token comment">// 处理文件,上传到OSS</span>\n      <span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token keyword">await</span> client<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>\n        <span class="token string">&#39;(&#39;</span> <span class="token operator">+</span> originFileName <span class="token operator">+</span> <span class="token string">&#39;)&#39;</span> <span class="token operator">+</span> filename<span class="token punctuation">,</span>\n        file<span class="token punctuation">.</span>filepath\n      <span class="token punctuation">)</span>\n      ctx<span class="token punctuation">.</span>body <span class="token operator">=</span> <span class="token punctuation">{</span>\n        code<span class="token operator">:</span> <span class="token number">200</span><span class="token punctuation">,</span>\n        result<span class="token punctuation">,</span>\n      <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      <span class="token comment">// 需要删除临时文件</span>\n      <span class="token keyword">await</span> fs<span class="token punctuation">.</span><span class="token function">unlink</span><span class="token punctuation">(</span>file<span class="token punctuation">.</span>filepath<span class="token punctuation">)</span>\n      ctx<span class="token punctuation">.</span>body <span class="token operator">=</span> <span class="token punctuation">{</span>\n        code<span class="token operator">:</span> <span class="token number">110</span><span class="token punctuation">,</span>\n        msg<span class="token operator">:</span> e<span class="token punctuation">,</span>\n      <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\nmodule<span class="token punctuation">.</span>exports <span class="token operator">=</span> UploadController\n</code></pre></div><h2 id="stream-模式">Stream 模式</h2><p>如果你对于 Node 中的 Stream 模式非常熟悉，那么你可以选择此模式。在 Controller 中，我们可以通过 <code>ctx.getFileStream()</code> 接口能获取到上传的文件流。</p><h3 id="egg配置-1">Egg配置</h3><div class="language-js"><pre><code> exports<span class="token punctuation">.</span>multipart <span class="token operator">=</span> <span class="token punctuation">{</span>\n    mode<span class="token operator">:</span> <span class="token string">&#39;file&#39;</span><span class="token punctuation">,</span>\n    allowArrayField<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n    fileSize<span class="token operator">:</span> <span class="token string">&#39;5mb&#39;</span><span class="token punctuation">,</span>\n   \t<span class="token comment">// 如果报错 Invalid filename ，egg-multipart有对上传文件的后缀名限制的白名单(whitelist)，.md后缀没有在默认whitelist中，导致上传失败。</span>\n    fileExtensions<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;.md&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span>\n</code></pre></div><h3 id="代码-1">代码</h3><div class="language-js"><pre><code><span class="token string">&#39;use strict&#39;</span>\n\n<span class="token keyword">const</span> Controller <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;egg&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>Controller\n<span class="token keyword">const</span> path <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;path&#39;</span><span class="token punctuation">)</span>\n<span class="token keyword">const</span> <span class="token constant">OSS</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;ali-oss&#39;</span><span class="token punctuation">)</span>\n<span class="token keyword">const</span> fs <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;mz/fs&#39;</span><span class="token punctuation">)</span>\n<span class="token keyword">const</span> crypto <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;crypto&#39;</span><span class="token punctuation">)</span>\n<span class="token keyword">const</span> sendToWormhole <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;stream-wormhole&#39;</span><span class="token punctuation">)</span>\n\n<span class="token keyword">class</span> <span class="token class-name">UploadController</span> <span class="token keyword">extends</span> <span class="token class-name">Controller</span> <span class="token punctuation">{</span>\n  <span class="token comment">// stream 模式，需要在 config.default.js 中修改 multipart.mode = &#39;stream&#39;</span>\n  <span class="token keyword">async</span> <span class="token function">uploadStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> <span class="token punctuation">{</span> ctx <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">this</span>\n    <span class="token keyword">const</span> stream <span class="token operator">=</span> <span class="token keyword">await</span> ctx<span class="token punctuation">.</span><span class="token function">getFileStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n\n    <span class="token comment">// 获取参数</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>stream<span class="token punctuation">)</span>\n\n    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>stream<span class="token punctuation">.</span>filename<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      ctx<span class="token punctuation">.</span>body <span class="token operator">=</span> <span class="token punctuation">{</span>\n        code<span class="token operator">:</span> <span class="token number">110</span><span class="token punctuation">,</span>\n        msg<span class="token operator">:</span> <span class="token string">&#39;上传失败，请重新尝试&#39;</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span>\n      <span class="token keyword">return</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token keyword">const</span> client <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">OSS</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n      region<span class="token operator">:</span> <span class="token string">&#39;oss-cn-beijing&#39;</span><span class="token punctuation">,</span>\n      bucket<span class="token operator">:</span> <span class="token string">&#39;yxh-test-bucket&#39;</span><span class="token punctuation">,</span>\n      accessKeyId<span class="token operator">:</span> <span class="token string">&#39;---&#39;</span><span class="token punctuation">,</span>\n      accessKeySecret<span class="token operator">:</span> <span class="token string">&#39;---&#39;</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n\n    <span class="token comment">// 获取后缀</span>\n    <span class="token keyword">const</span> extname <span class="token operator">=</span> path<span class="token punctuation">.</span><span class="token function">extname</span><span class="token punctuation">(</span>stream<span class="token punctuation">.</span>filename<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toLocaleLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n    <span class="token comment">// 获取源文件的文件名（不包含后缀名）</span>\n    <span class="token keyword">const</span> originFileName <span class="token operator">=</span> path<span class="token punctuation">.</span><span class="token function">basename</span><span class="token punctuation">(</span>stream<span class="token punctuation">.</span>filename<span class="token punctuation">,</span> extname<span class="token punctuation">)</span>\n\n    <span class="token comment">// 生成唯一的文件名</span>\n    <span class="token keyword">const</span> md5 <span class="token operator">=</span> crypto<span class="token punctuation">.</span><span class="token function">createHash</span><span class="token punctuation">(</span><span class="token string">&#39;md5&#39;</span><span class="token punctuation">)</span>\n    <span class="token keyword">const</span> timestamp <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// 当前时间戳</span>\n    <span class="token keyword">const</span> randomNum <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">ceil</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">1000</span><span class="token punctuation">)</span> <span class="token comment">// 取1000以下的随机数</span>\n    <span class="token keyword">const</span> filename <span class="token operator">=</span>\n      md5\n        <span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span>path<span class="token punctuation">.</span><span class="token function">basename</span><span class="token punctuation">(</span>stream<span class="token punctuation">.</span>filename<span class="token punctuation">,</span> extname<span class="token punctuation">)</span> <span class="token operator">+</span> timestamp <span class="token operator">+</span> randomNum<span class="token punctuation">)</span>\n        <span class="token punctuation">.</span><span class="token function">digest</span><span class="token punctuation">(</span><span class="token string">&#39;hex&#39;</span><span class="token punctuation">)</span> <span class="token operator">+</span> extname\n\n    <span class="token keyword">try</span> <span class="token punctuation">{</span>\n      <span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token keyword">await</span> client<span class="token punctuation">.</span><span class="token function">putStream</span><span class="token punctuation">(</span>\n        <span class="token string">&#39;(&#39;</span> <span class="token operator">+</span> originFileName <span class="token operator">+</span> <span class="token string">&#39;)&#39;</span> <span class="token operator">+</span> filename<span class="token punctuation">,</span>\n        stream\n      <span class="token punctuation">)</span>\n      ctx<span class="token punctuation">.</span>body <span class="token operator">=</span> <span class="token punctuation">{</span>\n        code<span class="token operator">:</span> <span class="token number">200</span><span class="token punctuation">,</span>\n        result<span class="token punctuation">,</span>\n      <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>\n      <span class="token keyword">await</span> <span class="token function">sendToWormhole</span><span class="token punctuation">(</span>stream<span class="token punctuation">)</span>\n      ctx<span class="token punctuation">.</span>body <span class="token operator">=</span> <span class="token punctuation">{</span>\n        code<span class="token operator">:</span> <span class="token number">110</span><span class="token punctuation">,</span>\n        msg<span class="token operator">:</span> <span class="token string">&#39;上传失败&#39;</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\nmodule<span class="token punctuation">.</span>exports <span class="token operator">=</span> UploadController\n\n</code></pre></div><p>更详细的使用方式请参考官网。</p><h2 id="踩坑-报错记录">踩坑(报错记录)</h2><p>1、<code>filetype undefined </code> （图片可以上传，不报错）</p><p>**原因：**没有给egg指定上传文件的类型</p><p><strong>解决方法：</strong> 在<code>config</code>中添加如下配置</p><div class="language-js"><pre><code><span class="token comment">// config/config.default.js</span>\nconfig<span class="token punctuation">.</span>multipart <span class="token operator">=</span> <span class="token punctuation">{</span>\n  mode<span class="token operator">:</span> <span class="token string">&#39;file&#39;</span><span class="token punctuation">,</span>  <span class="token comment">// 对应文件类型 </span>\n<span class="token punctuation">}</span>\n</code></pre></div><p>2、<code>Invalid filename</code></p><p>在上传markdown文件或者txt或者apk的时候会出现</p><p><strong>原因：</strong><code>egg-multipart</code>有对上传文件的后缀名限制的白名单(whitelist)，<code>.txt</code>后缀没有在默认whitelist中，导致上传失败。</p><p><strong>解决方法：</strong> 在<code>config</code>中添加如下配置</p><div class="language-js"><pre><code><span class="token comment">// config/config.default.js</span>\nconfig<span class="token punctuation">.</span>multipart <span class="token operator">=</span> <span class="token punctuation">{</span>\n  fileExtensions<span class="token operator">:</span> <span class="token punctuation">[</span>\n    <span class="token string">&#39;.txt&#39;</span><span class="token punctuation">,</span>\n  <span class="token punctuation">]</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span>\n</code></pre></div><p>后缀名限制的白名单: <a href="https://www.eggjs.org/zh-CN/basics/controller#%E8%8E%B7%E5%8F%96%E4%B8%8A%E4%BC%A0%E7%9A%84%E6%96%87%E4%BB%B6" target="_blank" rel="noopener noreferrer">https://www.eggjs.org/zh-CN/basics/controller#获取上传的文件</a></p><p>3、<code>Reach fileSize limit</code></p><p>**原因：**超出文件限制的大小</p><p><strong>解决方法：</strong> 在<code>config</code>中添加如下配置</p><div class="language-js"><pre><code><span class="token comment">// config/config.default.js</span>\nconfig<span class="token punctuation">.</span>multipart <span class="token operator">=</span> <span class="token punctuation">{</span>\n  fileSize<span class="token operator">:</span> <span class="token string">&#39;100mb&#39;</span><span class="token punctuation">,</span>  <span class="token comment">// Max file size (in bytes), default is 10mb</span>\n<span class="token punctuation">}</span>\n</code></pre></div><h2 id="参考">参考</h2><p>1、阿里云OSS使用文档</p><p><a href="https://help.aliyun.com/document_detail/111265.html" target="_blank" rel="noopener noreferrer">https://help.aliyun.com/document_detail/111265.html</a>.</p><p>2、Egg官方-获取上传的文件</p><p><a href="https://www.eggjs.org/zh-CN/basics/controller#%E8%8E%B7%E5%8F%96%E4%B8%8A%E4%BC%A0%E7%9A%84%E6%96%87%E4%BB%B6" target="_blank" rel="noopener noreferrer">https://www.eggjs.org/zh-CN/basics/controller#获取上传的文件</a></p>',35)];p.render=function(a,t,p,e,c,l){return n(),s("div",null,o)};export default p;export{t as __pageData};
