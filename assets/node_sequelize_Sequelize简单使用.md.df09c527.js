import{o as n,c as s,e as a}from"./app.4c9f31c1.js";const p='{"title":"Sequelize简单实用","description":"","frontmatter":{},"headers":[{"level":2,"title":"正向创建数据表","slug":"正向创建数据表"},{"level":2,"title":"新增数据表字段","slug":"新增数据表字段"},{"level":2,"title":"自动生成model","slug":"自动生成model"}],"relativePath":"node/sequelize/Sequelize简单使用.md","lastUpdated":1659186875254}',t={},o=[a('<h1 id="sequelize简单实用">Sequelize简单实用</h1><h2 id="正向创建数据表">正向创建数据表</h2><p>请参考Egg官方的示例</p><p><a href="https://www.eggjs.org/zh-CN/tutorials/sequelize#%E5%AE%8C%E6%95%B4%E7%A4%BA%E4%BE%8B" target="_blank" rel="noopener noreferrer">https://www.eggjs.org/zh-CN/tutorials/sequelize#完整示例</a></p><h2 id="新增数据表字段">新增数据表字段</h2><p>1、先执行一次命令,表示要变更的操作</p><div class="language-"><pre><code>npx sequelize-cli migration:generate --name updateUser\n</code></pre></div><p>2、在migrations中生成了新的js文件之后,可以根据自己项目的代码方式替换里面自动生成的内容</p><div class="language-js"><pre><code><span class="token string">&#39;use strict&#39;</span>\n\n<span class="token comment">// 如果title字段不存在，就在users表中插入title字段</span>\nmodule<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token keyword">async</span> <span class="token function">up</span><span class="token punctuation">(</span><span class="token parameter">queryInterface<span class="token punctuation">,</span> Sequelize</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> fields <span class="token operator">=</span> <span class="token keyword">await</span> queryInterface<span class="token punctuation">.</span><span class="token function">describeTable</span><span class="token punctuation">(</span><span class="token string">&#39;users&#39;</span><span class="token punctuation">)</span> <span class="token comment">// 放到这个表中</span>\n    <span class="token keyword">const</span> t <span class="token operator">=</span> <span class="token keyword">await</span> queryInterface<span class="token punctuation">.</span>sequelize<span class="token punctuation">.</span><span class="token function">transaction</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n\n    <span class="token keyword">try</span> <span class="token punctuation">{</span>\n      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>fields<span class="token punctuation">.</span><span class="token function">hasOwnProperty</span><span class="token punctuation">(</span><span class="token string">&#39;title&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">await</span> queryInterface<span class="token punctuation">.</span><span class="token function">addColumn</span><span class="token punctuation">(</span>\n          <span class="token string">&#39;users&#39;</span><span class="token punctuation">,</span>\n          <span class="token string">&#39;title&#39;</span><span class="token punctuation">,</span>\n          <span class="token punctuation">{</span>\n            type<span class="token operator">:</span> Sequelize<span class="token punctuation">.</span><span class="token constant">STRING</span><span class="token punctuation">(</span><span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment">// 字段数据类型</span>\n            allowNull<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">// 不允许为空</span>\n            defaultValue<span class="token operator">:</span> <span class="token string">&#39;this is a title&#39;</span><span class="token punctuation">,</span> <span class="token comment">// 默认,没有为0</span>\n            comment<span class="token operator">:</span> <span class="token string">&#39;这里填写标题&#39;</span><span class="token punctuation">,</span> <span class="token comment">// 字段描述</span>\n            after<span class="token operator">:</span> <span class="token string">&#39;age&#39;</span><span class="token punctuation">,</span> <span class="token comment">// 字段放到这个字段之后</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          <span class="token punctuation">{</span> transaction<span class="token operator">:</span> t <span class="token punctuation">}</span>\n        <span class="token punctuation">)</span>\n      <span class="token punctuation">}</span>\n      <span class="token keyword">await</span> t<span class="token punctuation">.</span><span class="token function">commit</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      <span class="token keyword">throw</span> err\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n\n  <span class="token keyword">async</span> <span class="token function">down</span><span class="token punctuation">(</span><span class="token parameter">queryInterface</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> t <span class="token operator">=</span> <span class="token keyword">await</span> queryInterface<span class="token punctuation">.</span>sequelize<span class="token punctuation">.</span><span class="token function">transaction</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n    <span class="token keyword">try</span> <span class="token punctuation">{</span>\n      <span class="token keyword">await</span> queryInterface<span class="token punctuation">.</span><span class="token function">removeColumn</span><span class="token punctuation">(</span><span class="token string">&#39;users&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;title&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> transaction<span class="token operator">:</span> t <span class="token punctuation">}</span><span class="token punctuation">)</span>\n\n      <span class="token keyword">await</span> t<span class="token punctuation">.</span><span class="token function">commit</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      <span class="token keyword">await</span> t<span class="token punctuation">.</span><span class="token function">rollback</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n      <span class="token keyword">throw</span> err\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span>\n\n</code></pre></div><p>3、执行升级命令</p><div class="language-js"><pre><code>npx sequelize<span class="token operator">-</span>cli db<span class="token operator">:</span>migrate\n</code></pre></div><p>更多sequelize关于migrations的一些方法,可以看<a href="https://sequelize.org/v5/manual/migrations.html" target="_blank" rel="noopener noreferrer">sequelize的migrations</a></p><h2 id="自动生成model">自动生成model</h2><p>1、安装 <code>egg-sequelize-auto</code> ,如果数据库驱动没有还需要安装，此处使用的是mysql，所以安装 mysql2</p><div class="language-"><pre><code>npm install egg-sequelize-auto\nnpm install mysql2\n</code></pre></div><p>2、配置npm脚本</p><div class="language-"><pre><code>&quot;auto:model&quot;: &quot;egg-sequelize-auto -o &#39;./app/model&#39; -d egg-example-demo -h 127.0.0.1 -u root -p 3306 -x 123456 -e mysql&quot;\n</code></pre></div><p>参数说明：</p><div class="language-"><pre><code>egg-sequelize-auto -o 导出地址 -d 数据库名 -h 数据库地址 -u 账号 -p 端口 -x 密码 -t 表名 -e 数据库类型\n</code></pre></div><p>3、运行命令 <code>npm run auto:model</code></p><p>自动生成的例图：</p><div class="language-js"><pre><code><span class="token comment">/* indent size: 2 */</span>\n\nmodule<span class="token punctuation">.</span><span class="token function-variable function">exports</span> <span class="token operator">=</span> <span class="token parameter">app</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> DataTypes <span class="token operator">=</span> app<span class="token punctuation">.</span>Sequelize<span class="token punctuation">;</span>\n\n  <span class="token keyword">const</span> Model <span class="token operator">=</span> app<span class="token punctuation">.</span>model<span class="token punctuation">.</span><span class="token function">define</span><span class="token punctuation">(</span><span class="token string">&#39;users&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n    id<span class="token operator">:</span> <span class="token punctuation">{</span>\n      type<span class="token operator">:</span> DataTypes<span class="token punctuation">.</span><span class="token constant">INTEGER</span><span class="token punctuation">,</span>\n      allowNull<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n      primaryKey<span class="token operator">:</span> <span class="token boolean">true</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    name<span class="token operator">:</span> <span class="token punctuation">{</span>\n      type<span class="token operator">:</span> DataTypes<span class="token punctuation">.</span><span class="token constant">STRING</span><span class="token punctuation">(</span><span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n      allowNull<span class="token operator">:</span> <span class="token boolean">true</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    age<span class="token operator">:</span> <span class="token punctuation">{</span>\n      type<span class="token operator">:</span> DataTypes<span class="token punctuation">.</span><span class="token constant">INTEGER</span><span class="token punctuation">,</span>\n      allowNull<span class="token operator">:</span> <span class="token boolean">true</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    title<span class="token operator">:</span> <span class="token punctuation">{</span>\n      type<span class="token operator">:</span> DataTypes<span class="token punctuation">.</span><span class="token constant">STRING</span><span class="token punctuation">(</span><span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n      allowNull<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n      defaultValue<span class="token operator">:</span> <span class="token string">&#39;this is a title&#39;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    created_at<span class="token operator">:</span> <span class="token punctuation">{</span>\n      type<span class="token operator">:</span> DataTypes<span class="token punctuation">.</span><span class="token constant">DATE</span><span class="token punctuation">,</span>\n      allowNull<span class="token operator">:</span> <span class="token boolean">true</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    updated_at<span class="token operator">:</span> <span class="token punctuation">{</span>\n      type<span class="token operator">:</span> DataTypes<span class="token punctuation">.</span><span class="token constant">DATE</span><span class="token punctuation">,</span>\n      allowNull<span class="token operator">:</span> <span class="token boolean">true</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n    tableName<span class="token operator">:</span> <span class="token string">&#39;users&#39;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n  Model<span class="token punctuation">.</span><span class="token function-variable function">associate</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n\n  <span class="token punctuation">}</span>\n\n  <span class="token keyword">return</span> Model<span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n</code></pre></div><p>自动生成后的需要进行一些简单的修改：</p><p>1、主键一般是自动递增，需要自己添加<code>autoIncrement: true,</code>，否则某些情况下会报错.</p><p>2、若自定义table名字则tableName那一块需要删掉</p><p>3、若有定义created_at等需要自己添加或删除</p><p>4、导出的model最好与表名一样</p><p>修改如下</p><div class="language-js"><pre><code><span class="token comment">/* indent size: 2 */</span>\n\nmodule<span class="token punctuation">.</span><span class="token function-variable function">exports</span> <span class="token operator">=</span> <span class="token parameter">app</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> DataTypes <span class="token operator">=</span> app<span class="token punctuation">.</span>Sequelize\n\n  <span class="token keyword">const</span> User <span class="token operator">=</span> app<span class="token punctuation">.</span>model<span class="token punctuation">.</span><span class="token function">define</span><span class="token punctuation">(</span>\n    <span class="token string">&#39;users&#39;</span><span class="token punctuation">,</span>\n    <span class="token punctuation">{</span>\n      id<span class="token operator">:</span> <span class="token punctuation">{</span>\n        type<span class="token operator">:</span> DataTypes<span class="token punctuation">.</span><span class="token constant">INTEGER</span><span class="token punctuation">,</span>\n        allowNull<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n        primaryKey<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n        autoIncrement<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      name<span class="token operator">:</span> <span class="token punctuation">{</span>\n        type<span class="token operator">:</span> DataTypes<span class="token punctuation">.</span><span class="token constant">STRING</span><span class="token punctuation">(</span><span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n        allowNull<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      age<span class="token operator">:</span> <span class="token punctuation">{</span>\n        type<span class="token operator">:</span> DataTypes<span class="token punctuation">.</span><span class="token constant">INTEGER</span><span class="token punctuation">,</span>\n        allowNull<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      title<span class="token operator">:</span> <span class="token punctuation">{</span>\n        type<span class="token operator">:</span> DataTypes<span class="token punctuation">.</span><span class="token constant">STRING</span><span class="token punctuation">(</span><span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n        allowNull<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n        defaultValue<span class="token operator">:</span> <span class="token string">&#39;this is a title&#39;</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      created_at<span class="token operator">:</span> <span class="token punctuation">{</span>\n        type<span class="token operator">:</span> DataTypes<span class="token punctuation">.</span><span class="token constant">DATE</span><span class="token punctuation">,</span>\n        allowNull<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      updated_at<span class="token operator">:</span> <span class="token punctuation">{</span>\n        type<span class="token operator">:</span> DataTypes<span class="token punctuation">.</span><span class="token constant">DATE</span><span class="token punctuation">,</span>\n        allowNull<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">{</span>\n      tableName<span class="token operator">:</span> <span class="token string">&#39;users&#39;</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">)</span>\n\n  User<span class="token punctuation">.</span><span class="token function-variable function">associate</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>\n\n  <span class="token keyword">return</span> User\n<span class="token punctuation">}</span>\n\n</code></pre></div><p>参考</p><p><a href="https://www.cnblogs.com/alexander3714/p/14158613.html#%E5%88%9B%E5%BB%BA%E6%A8%A1%E5%9E%8B" target="_blank" rel="noopener noreferrer">https://www.cnblogs.com/alexander3714/p/14158613.html#创建模型</a></p>',31)];t.render=function(a,p,t,e,c,l){return n(),s("div",null,o)};export default t;export{p as __pageData};
