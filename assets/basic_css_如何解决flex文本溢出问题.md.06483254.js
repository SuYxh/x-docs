import{o as n,c as s,e as a}from"./app.8b525408.js";const t='{"title":"如何解决flex文本溢出问题","description":"","frontmatter":{},"headers":[{"level":2,"title":"前言","slug":"前言"},{"level":2,"title":"问题","slug":"问题"},{"level":2,"title":"解决方法","slug":"解决方法"},{"level":2,"title":"法二 width","slug":"法二-width"},{"level":2,"title":"法三 min-width","slug":"法三-min-width"},{"level":2,"title":"flex再算一题","slug":"flex再算一题"},{"level":2,"title":"结尾","slug":"结尾"},{"level":2,"title":"参考文献","slug":"参考文献"}],"relativePath":"basic/css/如何解决flex文本溢出问题.md","lastUpdated":1658753104216}',p={},e=[a('<h1 id="如何解决flex文本溢出问题">如何解决flex文本溢出问题</h1><h2 id="前言">前言</h2><hr><p>一个小姑娘问了我关于flex文本溢出的问题，事后我觉得这个问题还挺有意思的，所以简单的研究下和大家分享分享。</p><h2 id="问题">问题</h2><p>用一个简化的css和html为例</p><div class="language-html"><pre><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">&gt;</span></span><span class="token style"><span class="token language-css">\n  <span class="token selector">*</span> <span class="token punctuation">{</span>\n    <span class="token property">margin</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>\n    <span class="token property">padding</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n  <span class="token selector">.box</span> <span class="token punctuation">{</span>\n    <span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span>\n    <span class="token property">height</span><span class="token punctuation">:</span> 200px<span class="token punctuation">;</span>\n    <span class="token property">margin-top</span><span class="token punctuation">:</span> 20px<span class="token punctuation">;</span>\n    <span class="token property">width</span><span class="token punctuation">:</span> 400px<span class="token punctuation">;</span>\n    <span class="token property">margin</span><span class="token punctuation">:</span> 20px auto 0 auto<span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n  <span class="token selector">.left</span> <span class="token punctuation">{</span>\n    <span class="token property">width</span><span class="token punctuation">:</span> 100px<span class="token punctuation">;</span>\n    <span class="token property">height</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span>\n    <span class="token property">background</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n  <span class="token selector">.right</span> <span class="token punctuation">{</span>\n    <span class="token property">flex</span><span class="token punctuation">:</span> auto<span class="token punctuation">;</span>\n    <span class="token property">height</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span>\n    <span class="token property">background</span><span class="token punctuation">:</span> blue<span class="token punctuation">;</span>\n    <span class="token property">color</span><span class="token punctuation">:</span> #fff<span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n  <span class="token selector">.text</span> <span class="token punctuation">{</span>\n    <span class="token property">overflow</span><span class="token punctuation">:</span> hidden<span class="token punctuation">;</span>\n    <span class="token property">white-space</span><span class="token punctuation">:</span> nowrap<span class="token punctuation">;</span>\n    <span class="token property">text-overflow</span><span class="token punctuation">:</span> ellipsis<span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">&gt;</span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>box<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>left<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>123<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>right<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n      这是一段很长长长长长长长长长长长长长长长长长长文字，这是一段很长长长长长长长长长长长长长长长长长长文字\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>box<span class="token punctuation">&quot;</span></span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token value css language-css"><span class="token property">background</span><span class="token punctuation">:</span> green</span><span class="token punctuation">&quot;</span></span></span><span class="token punctuation">&gt;</span></span>正常的box<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\n</code></pre></div><p>上面是一个flex容器，包括着两个容器，其中右边的容器中我们希望的应该是正常展示，且文本显示省略号，但总是事与愿违。页面展示如下，左边红色区域被压缩，蓝色的区域拉伸了，并将父容器撑开。</p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/71508a79d30e4d73b6410d87c982900e~tplv-k3u1fbpfcp-zoom-in-crop-mark:3024:0:0:0.awebp?" alt="1.png"></p><p>那么，我们该如何解决怎么这个问题呢？</p><h2 id="解决方法">解决方法</h2><hr><p>方法有三，如下</p><ol><li>蓝色容器设置 <code>overflow: hidden</code></li><li>蓝色容器设置 <code>width: 0</code></li><li>蓝色容器设置 <code>min-width: 0</code></li></ol><p>第一种 overflow超出截断比较好理解。我们看看剩下的两种。</p><h2 id="法二-width">法二 width</h2><p>第二种，首先看下flex属性</p><div class="language-"><pre><code>&lt;!-- 缩写 --&gt;\nflex: auto; \n\nflex-grow: 1;\nflex-shrink: 1;\nflex-basis: auto;\n\n&lt;!--默认值为--&gt;\nflex: 0 1 auto;\n</code></pre></div><p>flex: auto是flex: 1 1 auto的缩写</p><p>其中</p><ul><li>flex-grow：表示放大比例</li><li>flex-shrink：表示缩小比例</li><li>flex-basis：作用于子元素的主轴上的宽度属性，并且优先级比默认的宽/高要高。 这个属性决定CSS如何给可伸缩项在容器中分配初始大小.</li></ul><p>上面作妖的属性就是flex-basis。flex-basis的值有 <code>content</code> | <code>\\&lt;width\\&gt;</code></p><p>flex-basis: 会检索项目的width 或 height 值作为 flex-basis 的值。如果 width 或 height 值为 <code>auto</code>，则 flex-basis 设置为 <code>content</code>，也就是基于 flex 的元素的内容自动调整大小。</p><p>注意： flex-basis设置 <code>0</code> 和 <code>0%</code> 上有所区别, 如果<code>flex-basis</code>的值为百分数，且它flex容器的尺寸没有被显式设置，此时flex-basis的值会被解析为<code>content</code>, 值会根据flex子项的内容（指flex子项的子元素尺寸）来计算实际尺寸，多数情况下效果与 max-content 值一致，就是说flex子项的子元素有多长其主轴初始值就有多长。</p><p>这里蓝色容器的flex-basis为默认值0项目总宽度小于容器宽度，计算如下：</p><p><strong>项目总宽度100px + 0px = 100px</strong></p><p><strong>待分配宽度400px - 100px = 300px</strong></p><p><strong>放大比例0 + 1 = 1 , 这是项目的flex-grow之和</strong></p><p>每个项目得到自身的grow/总的grow之和比例的剩余空间。</p><p><strong>红色容器得到0/1 * 300px = 0，最终宽度100px + 0px = 100px</strong></p><p><strong>蓝色容器得到 1/1 * 300px = 300px，最终宽度300px</strong></p><p>将蓝色容器的宽度设为0，验证下我们的结果，结果如下，解决成功。</p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/738852074da243ac9cd8142c5627df6d~tplv-k3u1fbpfcp-zoom-in-crop-mark:3024:0:0:0.awebp?" alt="f1.png"></p><h2 id="法三-min-width">法三 min-width</h2><p>一般情况下 min-width 属性默认值是 0 ，但是 Flexbox 容器中的 flex 项的 <code>min-width</code> 属性默认值是 <code>auto</code> ，这样能为 Flexbox 布局指明更合理的默认表现。将min-width设置成0，width未设置默认值为auto。这个时候会使用<code>shrink-to-fit</code>算法去计算宽度(文献3中说明flexbox中也会使用到该算法), 算法如下：</p><div class="language-"><pre><code>width = min(max(preferred minimum width, available width), preferred width)\n</code></pre></div><p>其中</p><ul><li>最小宽度（preferred minimum width）也就是min-width</li><li>可用宽度（available width） ，这个宽度为包含块减去margin、border、padding以及所有相关滚动条的宽度。</li><li>发生明确的换行外不发生换行的时 首选宽度（preferred width） 即content-box的宽度</li></ul><p>那么计算如下: (816是当时浏览器获取的宽度)</p><p><strong>min(max(0, 400px - 100px), 816px) = 300px</strong></p><p>所以，设置最小宽度也能解决我们的问题。</p><h2 id="flex再算一题">flex再算一题</h2><hr><p>html的内容如下，我们需要计算左右两个容器的宽度。</p><div class="language-"><pre><code>&lt;style&gt;\n  .box {\n    display: flex;\n    height: 200px;\n    margin-top: 20px;\n    width: 400px;\n    margin: 20px auto 0 auto;\n  }\n  .item-1 {\n    background: red;\n    width: 200px;\n    flex-shrink: 2;\n  }\n  .item-2 {\n    background: blue;\n    width: 300px;\n    flex-shrink: 3;\n  }\n&lt;/style&gt;\n&lt;div class=&quot;box&quot;&gt;\n  &lt;div class=&quot;item-1&quot;&gt;设置200px，实际169.23&lt;/div&gt;\n  &lt;div class=&quot;item-2&quot;&gt;设置300px，实际230.77&lt;/div&gt;\n&lt;/div&gt;\n复制代码\n</code></pre></div><p>开始计算，此时项目总宽度超过父容器时，这个时候需要使用flex-shrink计算</p><ol><li>先要去计算项目的虚拟总宽度Total = 各项目flex-basic * flex-strink 之和，这里左右项目都设置了宽度，所以flex-basis=width</li><li>再计算单个项目的占比P = flex * flex-strink / Total</li><li>最后计算项目应该减去的大小 = 真实超出部分 * P</li></ol><p>Total = 200 * 2 + 300 * 3 = 1300</p><p>P1 = 200 * (2 / VS)</p><p>P2 = 300 * (3 / VS)</p><p>最终得出：</p><p>item-1的宽度为：200 - (500 - 400) * P1 = 169.23px</p><p>item-2 的宽度为：300 - (500 - 400) * P2 = 230.77px</p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/fe33c13298d3450d807f47741fd57842~tplv-k3u1fbpfcp-zoom-in-crop-mark:3024:0:0:0.awebp?" alt="6.png"></p><h2 id="结尾">结尾</h2><hr><p>借这个问题还加深了对flex的认识，赚了赚了。欢迎大家关注我的<a href="https://link.juejin.cn/?target=https%3A%2F%2Fgithub.com%2Fzty1205" title="https://github.com/zty1205" target="_blank" rel="noopener noreferrer">github</a>，(面经，算法，设计模式等都有一点点)</p><h2 id="参考文献">参考文献</h2><hr><ol><li>【flex-basic】 <a href="https://link.juejin.cn/?target=https%3A%2F%2Fwww.w3.org%2FTR%2F2018%2FCR-css-flexbox-1-20181119%2F%23flex-basis-property" title="https://www.w3.org/TR/2018/CR-css-flexbox-1-20181119/#flex-basis-property" target="_blank" rel="noopener noreferrer">www.w3.org/TR/2018/CR-…</a></li><li>【shrink-to-fit算法】 <a href="https://link.juejin.cn/?target=https%3A%2F%2Fwww.w3.org%2FTR%2FCSS21%2Fvisudet.html%23float-width" title="https://www.w3.org/TR/CSS21/visudet.html#float-width" target="_blank" rel="noopener noreferrer">www.w3.org/TR/CSS21/vi…</a></li><li>【flex初始大小】 <a href="https://link.juejin.cn/?target=https%3A%2F%2Fwww.w3.org%2FTR%2F2018%2FCR-css-flexbox-1-20181119%2F%23intrinsic-sizes" title="https://www.w3.org/TR/2018/CR-css-flexbox-1-20181119/#intrinsic-sizes" target="_blank" rel="noopener noreferrer">www.w3.org/TR/2018/CR-…</a></li><li>【flex-更多计算案例】 <a href="https://link.juejin.cn/?target=https%3A%2F%2Fsegmentfault.com%2Fa%2F1190000023908961" title="https://segmentfault.com/a/1190000023908961" target="_blank" rel="noopener noreferrer">segmentfault.com/a/119000002…</a></li></ol>',60)];p.render=function(a,t,p,o,l,c){return n(),s("div",null,e)};export default p;export{t as __pageData};
