import{o as n,c as s,e as p}from"./app.7e0da940.js";const a='{"title":"pm2自动部署node项目","description":"","frontmatter":{},"headers":[{"level":2,"title":"pm2自动部署node项目","slug":"pm2自动部署node项目"},{"level":3,"title":"使用pm2部署项目","slug":"使用pm2部署项目"},{"level":3,"title":"可能会遇到的坑","slug":"可能会遇到的坑"},{"level":3,"title":"测试部署代码","slug":"测试部署代码"},{"level":3,"title":"参考","slug":"参考"}],"relativePath":"node/pm2自动部署node项目.md","lastUpdated":1657972228289}',e={},o=[p('<h2 id="pm2自动部署node项目">pm2自动部署node项目</h2><p>1、安装git</p><p>需要在服务器上安装git ， 且生成 <code>ssh-keygen -t rsa -C &quot;xxx@xxx.com&quot;</code> 密钥。</p><p>在 .ssh 文件夹下添加 config 文件，并且添加配置：</p><div class="language-"><pre><code>#default gitee 如果项目放在码云上，将 puk 公钥 放在 码云上，这样就可以拉取代码了\nHost gitee.com\nHostName gitee.com\nIdentityFile ~/.ssh/aliyun_rsa\n</code></pre></div><blockquote><p>首先需要配置好公钥，保证服务器可以拉取GitHub等仓库的代码</p><p>保证本地可以和服务器进行通信，可通过 ssh <a href="mailto:root@8.11.90.23">root@8.11.90.23</a></p></blockquote><p>2、在项目根目录下新建一个 deploy.yaml 文件</p><div class="language-yaml"><pre><code><span class="token comment"># deploy.yaml</span>\n<span class="token key atrule">apps</span><span class="token punctuation">:</span>\n  <span class="token punctuation">-</span> <span class="token key atrule">script</span><span class="token punctuation">:</span> ./app.js       <span class="token comment"># 入口文件</span>\n    <span class="token key atrule">name</span><span class="token punctuation">:</span> <span class="token string">&#39;app&#39;</span>              <span class="token comment"># 程序名称</span>\n    <span class="token key atrule">env</span><span class="token punctuation">:</span>                     <span class="token comment"># 环境变量</span>\n      <span class="token key atrule">COMMON_VARIABLE</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>\n    <span class="token key atrule">env_production</span><span class="token punctuation">:</span>\n      <span class="token key atrule">NODE_ENV</span><span class="token punctuation">:</span> production\n\n<span class="token key atrule">deploy</span><span class="token punctuation">:</span>                     <span class="token comment"># 部署脚本</span>\n  <span class="token key atrule">production</span><span class="token punctuation">:</span>               <span class="token comment"># 生产环境</span>\n    <span class="token key atrule">user</span><span class="token punctuation">:</span> root            <span class="token comment"># 服务器的用户名</span>\n    <span class="token key atrule">host</span><span class="token punctuation">:</span> 10.1.124.96    <span class="token comment"># 服务器的ip地址</span>\n    <span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">22</span>                <span class="token comment"># ssh端口</span>\n    <span class="token key atrule">ref</span><span class="token punctuation">:</span> origin/master      <span class="token comment"># 要拉取的git分支</span>\n    <span class="token key atrule">ssh_options</span><span class="token punctuation">:</span> StrictHostKeyChecking=yes <span class="token comment"># SSH 公钥检查</span>\n    <span class="token key atrule">repo</span><span class="token punctuation">:</span> git@gitee.com<span class="token punctuation">:</span>dahuang/deploy_test.git <span class="token comment"># 远程仓库地址</span>\n    <span class="token key atrule">path</span><span class="token punctuation">:</span> /www/demo/deploy_test             <span class="token comment"># 拉取到服务器某个目录下</span>\n    <span class="token key atrule">pre-deploy</span><span class="token punctuation">:</span> git pull <span class="token comment"># 部署前执行</span>\n    <span class="token key atrule">post-deploy</span><span class="token punctuation">:</span> npm install <span class="token important">&amp;&amp;</span> pm2 start app <span class="token comment"># 部署后执行</span>\n    <span class="token key atrule">env</span><span class="token punctuation">:</span>\n      <span class="token key atrule">NODE_ENV</span><span class="token punctuation">:</span> production \n</code></pre></div><h3 id="使用pm2部署项目">使用pm2部署项目</h3><ul><li>首次部署</li></ul><div class="language-shell"><pre><code>pm2 deploy deploy.yaml production setup \n</code></pre></div><p>部署完成后，既可登陆服务器查看配置的目录下是否从git上拉取了项目</p><ul><li>再次部署</li></ul><p>部署完成后，将 <code>post-deploy</code> 改成 <code>npm install &amp;&amp; pm2 restart app</code> ，部署前执行的是 <code>pm2 start app</code></p><div class="language-"><pre><code>pm2 deploy deploy.yaml production\n</code></pre></div><blockquote><p>该部署流程同样适用前端项目</p><p>如vue-cli的项目，自动部署到服务器，自动执行npm run build 命令，生成的dist目录，指定到nginx的静态文件目录下</p></blockquote><h3 id="可能会遇到的坑">可能会遇到的坑</h3><p>1、在window系统下 vscode的命令行程序，以及powershell执行部署的命令时，出现部署失败</p><p><img src="http://qn.huat.xyz/content/20210315122255.png" alt=""></p><p>解决方案：使用git命令行来执行</p><p>2、 pm2 command not found post-deploy hook failed Deploy failed 1</p><blockquote><p>如果使用 宝塔搭的环境可能存在这个问题</p></blockquote><p><strong>原因</strong></p><p>这个提示是找不到npm 跟pm2 命令， 但是我们在服务器上使用 npm -v pm2 -v 是可以查看到版本好的， 也就是安装好的。这个时候提示 command not found 是因为在自动部署的时候 使用的全局下的npm pm2 命令，在全局环境下 找不到这两个命令， 自然就报错了，为了验证， 可以执行 <code>sudo npm -v</code> <code>sudo pm2 -v</code> 也会提示 <code>command not found</code></p><p><strong>解决方案</strong></p><p>为了解决这个问题需要让npm pm2 建立软连接，相当于放在环境变量中。首先查看 npm 的安装位置，可以使用 <code>whereis npm</code> 查看npm 的安装路径， 如果 <code>whereis npm</code> 显示路径为空，则使用 <code>which npm</code> 比如 这里显示的路径是 <code>/usr/local/src/node-v10.16.3-linux-x64/bin/npm</code> ，然后执行</p><div class="language-"><pre><code>sudo ln -s  /usr/local/src/node-v10.16.3-linux-x64/bin/npm  /usr/bin/npm\n</code></pre></div><p>这就相当于把npm 链接到了 全局环境变量中，这时候在执行 sudo npm -v 就不报错了。</p><blockquote><p>注意：</p><p>需要先将node和npm链接到全局环境变量中，在将pm2链接到全局环境变量中，再去使用 <code>sudo npm -v </code> 测试</p></blockquote><h3 id="测试部署代码">测试部署代码</h3><p><a href="https://wwa.lanzous.com/iFlDomye3ud" target="_blank" rel="noopener noreferrer">https://wwa.lanzous.com/iFlDomye3ud</a></p><h3 id="参考">参考</h3><blockquote><p><a href="https://www.cnblogs.com/yalong/p/13935503.html" target="_blank" rel="noopener noreferrer">https://www.cnblogs.com/yalong/p/13935503.html</a></p><p><a href="https://www.cnblogs.com/lentoo/p/9539137.html" target="_blank" rel="noopener noreferrer">https://www.cnblogs.com/lentoo/p/9539137.html</a></p><p>GitHub action 部署vue项目：<a href="https://www.bilibili.com/video/BV1vX4y1K7bQ?p=15" target="_blank" rel="noopener noreferrer">https://www.bilibili.com/video/BV1vX4y1K7bQ?p=15</a></p></blockquote>',33)];e.render=function(p,a,e,t,l,c){return n(),s("div",null,o)};export default e;export{a as __pageData};
